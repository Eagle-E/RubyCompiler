<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>16.0</VCProjectVersion>
    <Keyword>Win32Proj</Keyword>
    <ProjectGuid>{a030658b-4f4b-4d47-8472-b29014c0a139}</ProjectGuid>
    <RootNamespace>MRCompiler</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions);_CRT_SECURE_NO_WARNINGS</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions);_CRT_SECURE_NO_WARNINGS</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions);_CRT_SECURE_NO_WARNINGS</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NDEBUG;_CONSOLE;%(PreprocessorDefinitions);_CRT_SECURE_NO_WARNINGS</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="lexer.l">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">win_flex --wincompat -o %(Filename).cpp %(Identity)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating lexer</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">%(Filename).cpp</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">parser.y</AdditionalInputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">win_flex --wincompat -o %(Filename).cpp %(Identity)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating lexer</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">%(Filename).cpp</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">parser.y</AdditionalInputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">win_flex --wincompat -o %(Filename).cpp %(Identity)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating lexer</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(Filename).cpp</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">parser.y</AdditionalInputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">win_flex --wincompat -o %(Filename).cpp %(Identity)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating lexer</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(Filename).cpp</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">parser.y</AdditionalInputs>
    </CustomBuild>
    <CustomBuild Include="parser.y">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">win_bison -o %(Filename).cpp %(Identity) --defines=%(Filename).h</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating syntax parser</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">%(Filename).cpp; %(Filename).h</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">win_bison -o %(Filename).cpp %(Identity) --defines=%(Filename).h</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating syntax parser</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">%(Filename).cpp; %(Filename).h</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">win_bison -o %(Filename).cpp %(Identity) --defines=%(Filename).h</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating syntax parser</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(Filename).cpp; %(Filename).h</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">win_bison -o %(Filename).cpp %(Identity) --defines=%(Filename).h</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating syntax parser</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(Filename).cpp; %(Filename).h</Outputs>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="Add.cpp" />
    <ClCompile Include="And.cpp" />
    <ClCompile Include="ArgParser.cpp" />
    <ClCompile Include="AssignAnd.cpp" />
    <ClCompile Include="AssignDivide.cpp" />
    <ClCompile Include="AssignMinus.cpp" />
    <ClCompile Include="AssignOp.cpp" />
    <ClCompile Include="AssignmentExpression.cpp" />
    <ClCompile Include="AssignOr.cpp" />
    <ClCompile Include="AssignPlus.cpp" />
    <ClCompile Include="AssignTimes.cpp" />
    <ClCompile Include="BinOp.cpp" />
    <ClCompile Include="BinOpExpression.cpp" />
    <ClCompile Include="BooleanLiteral.cpp" />
    <ClCompile Include="CompileTask.cpp" />
    <ClCompile Include="CompoundStatement.cpp" />
    <ClCompile Include="Div.cpp" />
    <ClCompile Include="DivideByZeroException.cpp" />
    <ClCompile Include="Equal.cpp" />
    <ClCompile Include="Expression.cpp" />
    <ClCompile Include="ExpressionStatement.cpp" />
    <ClCompile Include="FunctionTable.cpp" />
    <ClCompile Include="GreaterOrEqual.cpp" />
    <ClCompile Include="GreaterThan.cpp" />
    <ClCompile Include="IdentifierExpression.cpp" />
    <ClCompile Include="IdentifierNotDefined.cpp" />
    <ClCompile Include="InvalidCommandLineArguments.cpp" />
    <ClCompile Include="InvalidNumberOfOperands.cpp" />
    <ClCompile Include="InvalidOperandType.cpp" />
    <ClCompile Include="LessOrEqual.cpp" />
    <ClCompile Include="LessThan.cpp" />
    <ClCompile Include="lexer.cpp" />
    <ClCompile Include="Literal.cpp" />
    <ClCompile Include="LiteralExpression.cpp" />
    <ClCompile Include="main.cpp" />
    <ClCompile Include="IntegerLiteral.cpp" />
    <ClCompile Include="InvalidAmountOfOperands.cpp" />
    <ClCompile Include="Mul.cpp" />
    <ClCompile Include="NotEqual.cpp" />
    <ClCompile Include="OperationExpression.cpp" />
    <ClCompile Include="Or.cpp" />
    <ClCompile Include="Program.cpp" />
    <ClCompile Include="ProgramStack.cpp" />
    <ClCompile Include="StackItem.cpp" />
    <ClCompile Include="Statement.cpp" />
    <ClCompile Include="Sub.cpp" />
    <ClCompile Include="UnaryBooleanNegation.cpp" />
    <ClCompile Include="UnaryBooleanNegationExpression.cpp" />
    <ClCompile Include="UnaryNumericNegation.cpp" />
    <ClCompile Include="UnaryNumericNegationExpression.cpp" />
    <ClCompile Include="UnaryOperation.cpp" />
    <ClCompile Include="parser.cpp" />
    <ClCompile Include="UnaryOperationExpression.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="Add.h" />
    <ClInclude Include="And.h" />
    <ClInclude Include="ArgParser.h" />
    <ClInclude Include="AssignAnd.h" />
    <ClInclude Include="AssignDivide.h" />
    <ClInclude Include="AssignMinus.h" />
    <ClInclude Include="AssignOp.h" />
    <ClInclude Include="AssignmentExpression.h" />
    <ClInclude Include="AssignOr.h" />
    <ClInclude Include="AssignPlus.h" />
    <ClInclude Include="AssignTimes.h" />
    <ClInclude Include="BinOp.h" />
    <ClInclude Include="BinOpExpression.h" />
    <ClInclude Include="BooleanLiteral.h" />
    <ClInclude Include="Div.h" />
    <ClInclude Include="DivideByZeroException.h" />
    <ClInclude Include="Equal.h" />
    <ClInclude Include="FunctionTable.h" />
    <ClInclude Include="GreaterOrEqual.h" />
    <ClInclude Include="GreaterThan.h" />
    <ClInclude Include="IdentifierExpression.h" />
    <ClInclude Include="IdentifierNotDefined.h" />
    <ClInclude Include="IntegerLiteral.h" />
    <ClInclude Include="CompileTask.h" />
    <ClInclude Include="CompoundStatement.h" />
    <ClInclude Include="Expression.h" />
    <ClInclude Include="ExpressionStatement.h" />
    <ClInclude Include="InvalidCommandLineArguments.h" />
    <ClInclude Include="InvalidNumberOfOperands.h" />
    <ClInclude Include="InvalidOperandType.h" />
    <ClInclude Include="LessOrEqual.h" />
    <ClInclude Include="LessThan.h" />
    <ClInclude Include="lexer.h" />
    <ClInclude Include="Literal.h" />
    <ClInclude Include="LiteralExpression.h" />
    <ClInclude Include="InvalidAmountOfOperands.h" />
    <ClInclude Include="Mul.h" />
    <ClInclude Include="NotEqual.h" />
    <ClInclude Include="OperationExpression.h" />
    <ClInclude Include="Or.h" />
    <ClInclude Include="Program.h" />
    <ClInclude Include="ProgramStack.h" />
    <ClInclude Include="StackAndTable.h" />
    <ClInclude Include="StackItem.h" />
    <ClInclude Include="Statement.h" />
    <ClInclude Include="Sub.h" />
    <ClInclude Include="UnaryBooleanNegation.h" />
    <ClInclude Include="UnaryBooleanNegationExpression.h" />
    <ClInclude Include="parser.h" />
    <ClInclude Include="UnaryNumericNegation.h" />
    <ClInclude Include="UnaryNumericNegationExpression.h" />
    <ClInclude Include="UnaryOperation.h" />
    <ClInclude Include="UnaryOperationExpression.h" />
  </ItemGroup>
  <ItemGroup>
    <None Include="parser_test\parseme_test1.err" />
    <None Include="parser_test\parseme_test1.rb" />
    <None Include="parser_test\parseme_test2.err" />
    <None Include="parser_test\parseme_test2.rb" />
    <None Include="parser_test\parseme_test3.err" />
    <None Include="parser_test\parseme_test3.rb" />
    <None Include="parser_test\README" />
    <None Include="parser_test\test.rb" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>